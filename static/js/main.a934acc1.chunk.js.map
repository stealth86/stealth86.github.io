{"version":3,"sources":["workers/Resize.worker.js","reducers/ControlReducer.js","Constants.js","reducers/SettingReducer.js","reducers/index.js","actions/types.js","store.js","components/Controls.js","actions/ControlAction.js","components/Settings.js","actions/SettingAction.js","components/ImageMatrix.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_require__","p","initialState","download","preview","progress","completed","total","status","imageList","THREADS","navigator","hardwareConcurrency","FORMATS","jpg","extension","filetypes","mimetype","value","png","width","height","quality","percent","fromFormat","toFormat","usePercent","combineReducers","ControlReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","SettingReducer","routing","routerReducer","middleware","thunk","store","createStore","rootReducer","applyMiddleware","apply","browserHistory","createHistory","history","syncHistoryWithStore","Controls","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","workers","i","ResizeWorker","forEach","worker","onmessage","event","selectfile","files","Math","round","updateProgress","saveImageList","data","image","filename","addToImageList","saveByteArray","a","document","createElement","style","blob","name","url","window","URL","createObjectURL","href","click","revokeObjectURL","callback","updatefiles","bind","assertThisInitialized","switchDownload","switchPreview","resetImageList","resize","nextProps","lab","innerHTML","postMessage","file","_this2","react_default","className","ref","el","id","onChange","accept","multiple","htmlFor","role","aria-valuenow","aria-valuemin","aria-valuemax","evt","target","checked","onClick","Component","connect","dispatch","imageData","Settings","setHeight","setWidth","setQuality","setPercent","setFromFormat","setToFormat","switchPercent","defaultValue","min","max","disabled","step","format","ImageMatrix","map","key","src","alt","App","es","Router","src_components_Settings","src_components_Controls","src_components_ImageMatrix","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a934acc1.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"WorkerName.b8b6010299858b2e2584.js\");\n};","import {\r\n    SWITCH_DOWNLOAD, SWITCH_PREVIEW, ADD_TO_IMAGE_LIST,\r\n    UPDATE_PROGRESS,\r\n    RESET_IMAGE_LIST\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    download: false,\r\n    preview: true,\r\n    progress: {\r\n        completed:0,\r\n        total:1,\r\n        status:\"\"\r\n    },\r\n    imageList: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SWITCH_DOWNLOAD:\r\n            return {\r\n                ...state,\r\n                download: action.payload\r\n            }\r\n        case SWITCH_PREVIEW:\r\n            return {\r\n                ...state,\r\n                preview: action.payload\r\n            }\r\n        case ADD_TO_IMAGE_LIST:\r\n            return {\r\n                ...state,\r\n                imageList: [\r\n                    ...state.imageList,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case RESET_IMAGE_LIST:\r\n        return{\r\n            ...state,\r\n            imageList : []\r\n        }\r\n        case UPDATE_PROGRESS:\r\n            return {\r\n                ...state,\r\n                progress:action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}","export const DEFAULT_WIDTH=512;\r\nexport const DEFAULT_HEIGHT=512;\r\nexport const DEFAULT_QUALITY=85;\r\nexport const DEFAULT_PERCENT=50;\r\nexport const FORMAT_JPG=\"jpg\";\r\nexport const FORMAT_PNG=\"png\";\r\nexport const THREADS=navigator.hardwareConcurrency || 4;\r\nexport const FORMATS= {jpg:{extension :\".jpg\",filetypes:\".jpg,.jpeg\",mimetype:\"image/jpeg\",value:\"JPEG\"},\r\n                      png:{extension :\".png\",filetypes:\".png\",mimetype:\"image/png\",value:\"PNG\"}}","import { DEFAULT_HEIGHT,DEFAULT_WIDTH, DEFAULT_QUALITY, DEFAULT_PERCENT, FORMAT_JPG} from '../Constants';\r\nimport { SET_HEIGHT,SET_WIDTH, SET_QUALITY, SWITCH_PERCENT, SET_PERCENT, SET_FROM_FORMAT, SET_TO_FORMAT} from '../actions/types';\r\n\r\nconst initialState={\r\n    width:DEFAULT_WIDTH,\r\n    height:DEFAULT_HEIGHT,\r\n    quality:DEFAULT_QUALITY,\r\n    percent:DEFAULT_PERCENT,\r\n    fromFormat:FORMAT_JPG,\r\n    toFormat:FORMAT_JPG,\r\n    usePercent:false\r\n}\r\n\r\nexport default function (state=initialState, action) {\r\n    switch (action.type) {\r\n        case SET_HEIGHT:\r\n            return{\r\n                ...state,\r\n                height : action.payload\r\n            }\r\n        case SET_WIDTH:\r\n            return{\r\n                ...state,\r\n                width : action.payload\r\n            }\r\n        case SET_QUALITY:\r\n            return{\r\n                ...state,\r\n                quality : action.payload\r\n            }\r\n        case SET_PERCENT:\r\n            return{\r\n                ...state,\r\n                percent : action.payload\r\n            }\r\n        case SET_FROM_FORMAT:\r\n            return{\r\n                ...state,\r\n                fromFormat : action.payload\r\n            }\r\n        case SET_TO_FORMAT:\r\n            return{\r\n                ...state,\r\n                toFormat : action.payload\r\n            }\r\n        case SWITCH_PERCENT:\r\n            return{\r\n                ...state,\r\n                usePercent : action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n","import { combineReducers} from 'redux';\r\nimport { routerReducer } from 'react-router-redux';\r\nimport ControlReducer from './ControlReducer';\r\nimport SettingReducer from './SettingReducer';\r\n\r\nexport default combineReducers({\r\n    ControlReducer,\r\n    SettingReducer,\r\n    routing : routerReducer\r\n});","export const SWITCH_DOWNLOAD = \"SWITCH_DOWNLOAD\";\r\nexport const SWITCH_PREVIEW = \"SWITCH_PREVIEW\";\r\nexport const SWITCH_PERCENT = \"SWITCH_PERCENT\";\r\nexport const SET_HEIGHT = \"SET_HEIGHT\";\r\nexport const SET_WIDTH = \"SET_WIDTH\";\r\nexport const SET_QUALITY = \"SET_QUALITY\";\r\nexport const SET_PERCENT = \"SET_PERCENT\";\r\nexport const SET_FROM_FORMAT = \"SET_FROM_FORMAT\";\r\nexport const SET_TO_FORMAT = \"SET_TO_FORMAT\";\r\nexport const ADD_TO_IMAGE_LIST = \"ADD_TO_IMAGE_LIST\";\r\nexport const RESET_IMAGE_LIST = \"RESET_IMAGE_LIST\";\r\nexport const UPDATE_PROGRESS = \"UPDATE_PROGRESS\";","import { createStore,applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { syncHistoryWithStore } from 'react-router-redux';\r\nimport createHistory from \"history/createBrowserHistory\";\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nexport const store = createStore(rootReducer,initialState,applyMiddleware(...middleware));\r\n\r\nconst browserHistory = createHistory();\r\nexport const history = syncHistoryWithStore(browserHistory, store);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    switchDownload,\r\n    switchPreview,\r\n    addToImageList,\r\n    updateProgress,\r\n    resetImageList\r\n} from '../actions/ControlAction';\r\nimport ResizeWorker from '../workers/Resize.worker';\r\nimport './Controls.css';\r\nimport { THREADS, FORMATS } from '../Constants';\r\n\r\nclass Controls extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.updatefiles = this.updatefiles.bind(this);\r\n        this.switchDownload = this.props.switchDownload.bind(this);\r\n        this.switchPreview = this.props.switchPreview.bind(this);\r\n        this.addToImageList = this.props.addToImageList.bind(this);\r\n        this.updateProgress = this.props.updateProgress.bind(this);\r\n        this.resetImageList = this.props.resetImageList.bind(this);\r\n        this.resize = this.resize.bind(this);\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        var status = \"\";\r\n        this.workers = [];\r\n        for (var i = 0; i < THREADS; i++) {\r\n            this.workers[i] = new ResizeWorker();\r\n        }\r\n        this.workers.forEach(worker => {\r\n            worker.onmessage = (event) => {\r\n                //console.log(event.data.image);\r\n                if (this.props.progress.completed + 1 === this.selectfile.files.length)\r\n                    status = \"Completed\"\r\n                else\r\n                    status = Math.round(this.props.progress.completed*100/this.selectfile.files.length)+\"%\"\r\n                this.updateProgress({\r\n                    completed: this.props.progress.completed + 1,\r\n                    total: this.selectfile.files.length,\r\n                    status: status\r\n                });\r\n                if (this.props.preview) {\r\n                    this.saveImageList(event.data.image, event.data.filename, this.addToImageList)\r\n                }\r\n                if (this.props.download) {\r\n                    this.saveByteArray(event.data.image, event.data.filename);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.fromFormat !== nextProps.fromFormat) {\r\n            this.selectfile.value = \"\"\r\n            this.updatefiles()\r\n        }\r\n    }\r\n\r\n    updatefiles() {\r\n        if (this.selectfile.files.length > 0)\r\n            this.lab.innerHTML = this.selectfile.files.length + \" Files Chosen\"\r\n        else\r\n            this.lab.innerHTML = \"Choose files\"\r\n    }\r\n\r\n    saveByteArray = (() => {\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        return (blob, name) => {\r\n            var url = window.URL.createObjectURL(blob);\r\n            a.href = url;\r\n            a.download = name;\r\n            a.click();\r\n            window.URL.revokeObjectURL(url);\r\n        }\r\n    })();\r\n\r\n    saveImageList = (() => {\r\n        return (blob, name, callback) => {\r\n            var url = window.URL.createObjectURL(blob);\r\n            callback({\r\n                image: url,\r\n                filename: name\r\n            })\r\n        }\r\n    })();\r\n\r\n    resize() {\r\n        this.resetImageList();\r\n        this.updateProgress({\r\n            completed: 0,\r\n            total: 1,\r\n            status: \"\"\r\n        })\r\n        //for (var i = 0; i < (this.selectfile.files.length < THREADS ? this.selectfile.files.length : THREADS); i++) {\r\n        for (var i = 0; i < this.selectfile.files.length; i++) {\r\n            //console.log(i);\r\n            this.workers[i % THREADS].postMessage({\r\n                file: this.selectfile.files[i],\r\n                width: this.props.width,\r\n                height: this.props.height,\r\n                usePercent: this.props.usePercent,\r\n                percent: this.props.percent,\r\n                quality: this.props.quality,\r\n                fromFormat: this.props.fromFormat,\r\n                toFormat: this.props.toFormat\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"form-container mb-4 sticky-top bg-white\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"input-group\">\r\n                        <div className=\"custom-file\">\r\n                            <input ref={el => this.selectfile = el} type=\"file\" className=\"custom-file-input\"\r\n                                id=\"inputGroupFile02\" onChange={this.updatefiles} accept={FORMATS[this.props.fromFormat].filetypes} multiple={true} />\r\n                            <label ref={el => this.lab = el} className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">Choose files</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col px-4 py-2\">\r\n                    <div className=\"progress-height progress\">\r\n                        <div className={\"progress-bar \" +\r\n                            (this.props.progress.completed === this.props.progress.total ? 'bg-success' : '') +\r\n                            \" progress-bar-striped progress-bar-animated\"}\r\n                            role=\"progressbar\" style={\r\n                                { width: this.props.progress.completed * 100 / this.props.progress.total + '%' }}\r\n                            aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">{this.props.progress.status}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                    <div className=\"custom-control custom-checkbox float-left px-4 py-2\">\r\n                        <input className=\"custom-control-input\" type=\"checkbox\" id=\"inlineCheckbox1\"\r\n                            onChange={evt => this.switchDownload(evt.target.checked)} />\r\n                        <label className=\"custom-control-label\" htmlFor=\"inlineCheckbox1\">Download</label>\r\n                    </div>\r\n                    <div className=\"custom-control custom-checkbox float-left p-2\">\r\n                        <input className=\"custom-control-input\" type=\"checkbox\" checked={true} id=\"inlineCheckbox2\"\r\n                            onChange={evt => this.switchPreview(evt.target.checked)} />\r\n                        <label className=\"custom-control-label\" htmlFor=\"inlineCheckbox2\">Preview</label>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" onClick={this.resize}>Resize</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n    return {\r\n        progress: state.ControlReducer.progress,\r\n        download: state.ControlReducer.download,\r\n        preview: state.ControlReducer.preview,\r\n        width: state.SettingReducer.width,\r\n        height: state.SettingReducer.height,\r\n        percent: state.SettingReducer.percent,\r\n        usePercent: state.SettingReducer.usePercent,\r\n        fromFormat: state.SettingReducer.fromFormat,\r\n        toFormat: state.SettingReducer.toFormat,\r\n        quality: state.SettingReducer.quality\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, {\r\n    switchDownload,\r\n    switchPreview,\r\n    addToImageList,\r\n    updateProgress,\r\n    resetImageList\r\n})(Controls);","import { SWITCH_DOWNLOAD,SWITCH_PREVIEW,ADD_TO_IMAGE_LIST,\r\n         UPDATE_PROGRESS, \r\n         RESET_IMAGE_LIST} from './types';\r\n\r\nexport const switchDownload = (checked) => (dispatch) =>{\r\n    dispatch(\r\n        {\r\n            type:SWITCH_DOWNLOAD,\r\n            payload: checked\r\n        }\r\n    )\r\n}\r\n\r\nexport const switchPreview = (checked) => (dispatch) =>{\r\n    dispatch(\r\n        {\r\n            type:SWITCH_PREVIEW,\r\n            payload: checked\r\n        }\r\n    )\r\n}\r\n\r\nexport const addToImageList = (imageData) =>(dispatch) =>{\r\n    dispatch(\r\n        {\r\n            type:ADD_TO_IMAGE_LIST,\r\n            payload:imageData\r\n        }\r\n    )\r\n}\r\n\r\nexport const resetImageList = () =>(dispatch) =>{\r\n    dispatch(\r\n        {\r\n            type:RESET_IMAGE_LIST,\r\n            payload:null\r\n        }\r\n    )\r\n}\r\n\r\nexport const updateProgress = (progress) =>(dispatch) =>{\r\n    dispatch(\r\n        {\r\n            type:UPDATE_PROGRESS,\r\n            payload:progress\r\n        }\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setHeight, setWidth,\r\n    setQuality, setPercent,\r\n    switchPercent,\r\n    setFromFormat, setToFormat\r\n} from '../actions/SettingAction';\r\nimport { DEFAULT_HEIGHT, DEFAULT_WIDTH, DEFAULT_QUALITY, \r\n         DEFAULT_PERCENT, FORMAT_JPG, FORMAT_PNG,FORMATS } from '../Constants';\r\nimport './Settings.css';\r\n\r\nclass Settings extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setHeight = this.props.setHeight.bind(this);\r\n        this.setWidth = this.props.setWidth.bind(this);\r\n        this.setQuality = this.props.setQuality.bind(this);\r\n        this.setPercent = this.props.setPercent.bind(this);\r\n        this.setFromFormat = this.props.setFromFormat.bind(this);\r\n        this.setToFormat = this.props.setToFormat.bind(this);\r\n        this.switchPercent = this.props.switchPercent.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form-container mb-4\">\r\n                <label><h3>Settings</h3></label>\r\n                <hr />\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col\">\r\n                        <div className=\"row float-left\">\r\n                            <label className=\"col-md-2 col-form-label text-right\">From</label>\r\n                            <div className=\"col-md-4\">\r\n                                <select className=\"custom-select\" onChange={evt=> this.setFromFormat(evt.target.value)} \r\n                                defaultValue={FORMAT_JPG}>\r\n                                    <option value={FORMAT_JPG}>{FORMATS[FORMAT_JPG].value}</option>\r\n                                    <option value={FORMAT_PNG}>{FORMATS[FORMAT_PNG].value}</option>\r\n                                </select>\r\n                            </div>\r\n                            <label className=\"col-md-2 col-form-label text-right\">To</label>\r\n                            <div className=\"col-md-4\">\r\n                                <select className=\"custom-select\" onChange={evt=> this.setToFormat(evt.target.value)} \r\n                                defaultValue={FORMAT_JPG}>\r\n                                    <option value={FORMAT_JPG}>{FORMATS[FORMAT_JPG].value}</option>\r\n                                    <option value={FORMAT_PNG}>{FORMATS[FORMAT_PNG].value}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"row float-right\">\r\n                            <label htmlFor=\"width\" className=\"col-md-2 col-form-label text-right\">Width</label>\r\n                            <div className=\"col-md-4\">\r\n                                <input type=\"number\" className=\"form-control\" min={32} max={1920}\r\n                                    id=\"width\" onChange={evt => this.setWidth(evt.target.value)}\r\n                                    defaultValue={DEFAULT_WIDTH} disabled={this.props.usePercent} />\r\n                            </div>\r\n                            <label htmlFor=\"height\" className=\"col-md-2 col-form-label text-right\">Height</label>\r\n                            <div className=\"col-md-4\">\r\n                                <input type=\"number\" className=\"form-control mb-2\" min={32} max={1920}\r\n                                    id=\"height\" onChange={evt => this.setHeight(evt.target.value)}\r\n                                    defaultValue={DEFAULT_HEIGHT} disabled={this.props.usePercent} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-md-auto\">\r\n                        <div className=\"custom-control custom-checkbox\">\r\n                            <input className=\"custom-control-input\" type=\"checkbox\" id=\"percent\"\r\n                                onChange={evt => this.switchPercent(evt.target.checked)} />\r\n                            <label className=\"custom-control-label\" htmlFor=\"percent\">Percent ( {this.props.percent} )</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"range\" className=\"custom-range\" min={10} max={100}\r\n                            id=\"percentSlider\" onChange={evt => this.setPercent(evt.target.value)}\r\n                            defaultValue={DEFAULT_PERCENT} disabled={!this.props.usePercent} />\r\n                    </div>\r\n                </div>\r\n                <div className={\"row mb-2 \"+(this.props.toFormat===FORMAT_PNG?\"invisible\":\"visible\")}>\r\n                    <div className=\"col-md-auto\">\r\n                        <label htmlFor=\"customRange\" className=\"col-md-auto col-form-label\">\r\n                            Quality ( {this.props.quality} )</label>\r\n                    </div>\r\n                    <div className=\"col pt-2 \">\r\n                        <input type=\"range\" className=\"custom-range\" min={30} max={100} step={5}\r\n                            id=\"customRange\" onChange={evt => this.setQuality(evt.target.value)}\r\n                            defaultValue={DEFAULT_QUALITY} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n    return {\r\n        quality: state.SettingReducer.quality,\r\n        percent: state.SettingReducer.percent,\r\n        toFormat : state.SettingReducer.toFormat,\r\n        usePercent: state.SettingReducer.usePercent\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, {\r\n    setHeight,\r\n    setWidth,\r\n    setQuality,\r\n    setPercent,\r\n    setFromFormat,\r\n    setToFormat,\r\n    switchPercent\r\n})(Settings);","import { SET_HEIGHT,SET_WIDTH,SET_QUALITY, SET_PERCENT, SWITCH_PERCENT, SET_FROM_FORMAT, SET_TO_FORMAT} from './types';\r\n\r\nexport const setWidth = (width)=>(dispatch)=>{\r\n    dispatch({\r\n        type:SET_WIDTH,\r\n        payload:width\r\n    })\r\n}\r\n\r\nexport const setHeight = (height)=>(dispatch)=>{\r\n    dispatch({\r\n        type:SET_HEIGHT,\r\n        payload:height\r\n    })\r\n}\r\n\r\nexport const setQuality = (quality)=>(dispatch)=>{\r\n    dispatch({\r\n        type:SET_QUALITY,\r\n        payload:quality\r\n    })\r\n}\r\n\r\nexport const setPercent = (percent)=>(dispatch)=>{\r\n    dispatch({\r\n        type:SET_PERCENT,\r\n        payload:percent\r\n    })\r\n}\r\n\r\nexport const switchPercent = (checked)=>(dispatch)=>{\r\n    dispatch({\r\n        type:SWITCH_PERCENT,\r\n        payload:checked\r\n    })\r\n}\r\n\r\nexport const setFromFormat = (format) => (dispatch) =>{\r\n    dispatch({\r\n        type:SET_FROM_FORMAT,\r\n        payload:format\r\n    })\r\n}\r\n\r\nexport const setToFormat = (format) => (dispatch) =>{\r\n    dispatch({\r\n        type:SET_TO_FORMAT,\r\n        payload:format\r\n    })\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ImageMatrix.css';\r\n\r\nclass ImageMatrix extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {this.props.imageList.map((image, i) => {\r\n                    return <div className=\"col-xs-4 col-sm-3 col-md-2 mb-2\" key={i}>\r\n                        <div className=\"card bg-light\">\r\n                            <img className=\"card-img-top\" src={image.image} alt=\"Card cap\" />\r\n                            <div className=\"card-body\">\r\n                                <p className=\"card-text\">{image.filename}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n    return {\r\n        imageList: state.ControlReducer.imageList\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, {\r\n})(ImageMatrix);\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { Router } from 'react-router';\r\nimport { store, history } from './store';\r\nimport Controls from './components/Controls';\r\nimport Settings from './components/Settings';\r\nimport ImageMatrix from './components/ImageMatrix';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router history={history}>\r\n          <div className=\"container\">\r\n            <div className=\"jumbotron\">\r\n              <h1 className=\"display-4\">Image Resizer</h1>\r\n              <p className=\"lead\">\r\n                This Webapp is simple image resizer and converter for JPEG/PNG images.\r\n                It utilizes Web workers to resize image at client side and download to your\r\n                Downloads directory automatically with the desired resolution.\r\n          </p>\r\n            </div>\r\n            <Settings />\r\n            <Controls />\r\n            <ImageMatrix />\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}